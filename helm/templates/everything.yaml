apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tellchima
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - secretName: tellchima2-webhook-tls
      hosts:
        - webhook.tellchima2.pandawork.com
  rules:
    - host: webhook.tellchima2.pandawork.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: tellchima
              port: 
                number: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: tellchima
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: tellchima
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tellchima
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tellchima
  template:
    metadata:
      labels:
        app: tellchima
    spec:
      containers:
        - name: tellchima
          image: "{{ .Values.image.registry }}/tellchima:{{ .Values.appVersion }}"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: tellchima-config
            - secretRef:
                name: tellchima-secret
          env:
            - name: APP_VERSION
              value: "{{ .Values.appVersion }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2000m
              memory: 256Mi
          volumeMounts:
            - mountPath: /app/pv
              name: db-pv
      volumes:
        - name: db-pv
          persistentVolumeClaim:
            claimName: db-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pv-claim
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tellchima-config
data:
  DATABASE_URL: "file:/app/pv/data.db"
  SCHEDULED_MESSAGE_CHANNEL_ID: {{ .Values.scheduledMessage.channelId }}
  SCHEDULED_MESSAGE_COMMAND_SCHEDULE: {{ .Values.scheduledMessage.command.schedule }}
  SCHEDULED_MESSAGE_COMMAND_UNSCHEDULE: {{ .Values.scheduledMessage.command.unschedule }}
---
apiVersion: v1
kind: Secret
metadata:
  name: tellchima-secret
type: Opaque
data:
  SCHEDULED_MESSAGE_HASH_SALT: {{ .Values.scheduledMessage.hashSalt | b64enc }}
  SLACK_SIGNING_SECRET: {{ .Values.slack.signingSecret | b64enc }}
  SLACK_BOT_TOKEN: {{ .Values.slack.botToken | b64enc }}
